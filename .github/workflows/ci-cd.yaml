name: CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

# Add explicit permissions
permissions:
    contents: write  # For git commits and tags
    actions: read    # For workflow access

jobs:
    ci:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "24"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: npm test

            - name: Build package
              run: npm run build

    cd:
        needs: ci
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "24"
                  cache: "npm"
                  registry-url: "https://registry.npmjs.org"

            - name: Install dependencies
              run: npm ci

            - name: Build package
              run: npm run build

            - name: Configure Git
              run: |
                  git config --global user.name 'github-actions[bot]'
                  git config --global user.email 'github-actions[bot]@users.noreply.github.com'

            - name: Find next available version
              id: version_check
              run: |
                  CURRENT_VERSION=$(node -p "require('./package.json').version")
                  echo "Starting with version: $CURRENT_VERSION"
                  
                  # Function to check if version exists on npm
                  version_exists() {
                    npm view brand-model-variant-selector@$1 version > /dev/null 2>&1
                  }
                  
                  NEW_VERSION=$CURRENT_VERSION
                  VERSION_BUMPED=false
                  
                  # Keep bumping until we find a version that doesn't exist
                  while version_exists $NEW_VERSION; do
                    echo "Version $NEW_VERSION already exists on npm, bumping..."
                    npm version patch --no-git-tag-version > /dev/null
                    NEW_VERSION=$(node -p "require('./package.json').version")
                    VERSION_BUMPED=true
                  done
                  
                  echo "Final version to publish: $NEW_VERSION"
                  echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
                  echo "version_bumped=$VERSION_BUMPED" >> $GITHUB_OUTPUT

            - name: Publish to npm
              run: npm publish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Commit version bump and create tag
              if: steps.version_check.outputs.version_bumped == 'true'
              run: |
                  VERSION=${{ steps.version_check.outputs.new_version }}
                  git add package.json
                  git commit -m "chore: bump version to ${VERSION}"
                  git tag -a "v${VERSION}" -m "Release version ${VERSION}"
                  git push origin main --tags
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}